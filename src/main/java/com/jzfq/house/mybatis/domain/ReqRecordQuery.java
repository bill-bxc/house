package com.jzfq.house.mybatis.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReqRecordQuery {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public ReqRecordQuery() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("reqRecord.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("reqRecord.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("reqRecord.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("reqRecord.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("reqRecord.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("reqRecord.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("reqRecord.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("reqRecord.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdIsNull() {
            addCriterion("reqRecord.project_link_id is null");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdIsNotNull() {
            addCriterion("reqRecord.project_link_id is not null");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdEqualTo(Integer value) {
            addCriterion("reqRecord.project_link_id =", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdNotEqualTo(Integer value) {
            addCriterion("reqRecord.project_link_id <>", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdGreaterThan(Integer value) {
            addCriterion("reqRecord.project_link_id >", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.project_link_id >=", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdLessThan(Integer value) {
            addCriterion("reqRecord.project_link_id <", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdLessThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.project_link_id <=", value, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdIn(List<Integer> values) {
            addCriterion("reqRecord.project_link_id in", values, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdNotIn(List<Integer> values) {
            addCriterion("reqRecord.project_link_id not in", values, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.project_link_id between", value1, value2, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andProjectLinkIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.project_link_id not between", value1, value2, "projectLinkId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdIsNull() {
            addCriterion("reqRecord.resources_record_id is null");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdIsNotNull() {
            addCriterion("reqRecord.resources_record_id is not null");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdEqualTo(Integer value) {
            addCriterion("reqRecord.resources_record_id =", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdNotEqualTo(Integer value) {
            addCriterion("reqRecord.resources_record_id <>", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdGreaterThan(Integer value) {
            addCriterion("reqRecord.resources_record_id >", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.resources_record_id >=", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdLessThan(Integer value) {
            addCriterion("reqRecord.resources_record_id <", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdLessThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.resources_record_id <=", value, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdIn(List<Integer> values) {
            addCriterion("reqRecord.resources_record_id in", values, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdNotIn(List<Integer> values) {
            addCriterion("reqRecord.resources_record_id not in", values, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.resources_record_id between", value1, value2, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andResourcesRecordIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.resources_record_id not between", value1, value2, "resourcesRecordId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNull() {
            addCriterion("reqRecord.person_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNotNull() {
            addCriterion("reqRecord.person_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonIdEqualTo(Integer value) {
            addCriterion("reqRecord.person_id =", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotEqualTo(Integer value) {
            addCriterion("reqRecord.person_id <>", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThan(Integer value) {
            addCriterion("reqRecord.person_id >", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.person_id >=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThan(Integer value) {
            addCriterion("reqRecord.person_id <", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.person_id <=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIn(List<Integer> values) {
            addCriterion("reqRecord.person_id in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotIn(List<Integer> values) {
            addCriterion("reqRecord.person_id not in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.person_id between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.person_id not between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonNameIsNull() {
            addCriterion("reqRecord.person_name is null");
            return (Criteria) this;
        }

        public Criteria andPersonNameIsNotNull() {
            addCriterion("reqRecord.person_name is not null");
            return (Criteria) this;
        }

        public Criteria andPersonNameEqualTo(String value) {
            addCriterion("reqRecord.person_name =", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameNotEqualTo(String value) {
            addCriterion("reqRecord.person_name <>", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameGreaterThan(String value) {
            addCriterion("reqRecord.person_name >", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.person_name >=", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameLessThan(String value) {
            addCriterion("reqRecord.person_name <", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.person_name <=", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameLike(String value) {
            addCriterion("reqRecord.person_name like", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameNotLike(String value) {
            addCriterion("reqRecord.person_name not like", value, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameIn(List<String> values) {
            addCriterion("reqRecord.person_name in", values, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameNotIn(List<String> values) {
            addCriterion("reqRecord.person_name not in", values, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameBetween(String value1, String value2) {
            addCriterion("reqRecord.person_name between", value1, value2, "personName");
            return (Criteria) this;
        }

        public Criteria andPersonNameNotBetween(String value1, String value2) {
            addCriterion("reqRecord.person_name not between", value1, value2, "personName");
            return (Criteria) this;
        }

        public Criteria andReqContentIsNull() {
            addCriterion("reqRecord.req_content is null");
            return (Criteria) this;
        }

        public Criteria andReqContentIsNotNull() {
            addCriterion("reqRecord.req_content is not null");
            return (Criteria) this;
        }

        public Criteria andReqContentEqualTo(String value) {
            addCriterion("reqRecord.req_content =", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentNotEqualTo(String value) {
            addCriterion("reqRecord.req_content <>", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentGreaterThan(String value) {
            addCriterion("reqRecord.req_content >", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.req_content >=", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentLessThan(String value) {
            addCriterion("reqRecord.req_content <", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.req_content <=", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentLike(String value) {
            addCriterion("reqRecord.req_content like", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentNotLike(String value) {
            addCriterion("reqRecord.req_content not like", value, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentIn(List<String> values) {
            addCriterion("reqRecord.req_content in", values, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentNotIn(List<String> values) {
            addCriterion("reqRecord.req_content not in", values, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentBetween(String value1, String value2) {
            addCriterion("reqRecord.req_content between", value1, value2, "reqContent");
            return (Criteria) this;
        }

        public Criteria andReqContentNotBetween(String value1, String value2) {
            addCriterion("reqRecord.req_content not between", value1, value2, "reqContent");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayIsNull() {
            addCriterion("reqRecord.already_pay is null");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayIsNotNull() {
            addCriterion("reqRecord.already_pay is not null");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayEqualTo(BigDecimal value) {
            addCriterion("reqRecord.already_pay =", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayNotEqualTo(BigDecimal value) {
            addCriterion("reqRecord.already_pay <>", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayGreaterThan(BigDecimal value) {
            addCriterion("reqRecord.already_pay >", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("reqRecord.already_pay >=", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayLessThan(BigDecimal value) {
            addCriterion("reqRecord.already_pay <", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("reqRecord.already_pay <=", value, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayIn(List<BigDecimal> values) {
            addCriterion("reqRecord.already_pay in", values, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayNotIn(List<BigDecimal> values) {
            addCriterion("reqRecord.already_pay not in", values, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reqRecord.already_pay between", value1, value2, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andAlreadyPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reqRecord.already_pay not between", value1, value2, "alreadyPay");
            return (Criteria) this;
        }

        public Criteria andReqMoneyIsNull() {
            addCriterion("reqRecord.req_money is null");
            return (Criteria) this;
        }

        public Criteria andReqMoneyIsNotNull() {
            addCriterion("reqRecord.req_money is not null");
            return (Criteria) this;
        }

        public Criteria andReqMoneyEqualTo(BigDecimal value) {
            addCriterion("reqRecord.req_money =", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyNotEqualTo(BigDecimal value) {
            addCriterion("reqRecord.req_money <>", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyGreaterThan(BigDecimal value) {
            addCriterion("reqRecord.req_money >", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("reqRecord.req_money >=", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyLessThan(BigDecimal value) {
            addCriterion("reqRecord.req_money <", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("reqRecord.req_money <=", value, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyIn(List<BigDecimal> values) {
            addCriterion("reqRecord.req_money in", values, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyNotIn(List<BigDecimal> values) {
            addCriterion("reqRecord.req_money not in", values, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reqRecord.req_money between", value1, value2, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reqRecord.req_money not between", value1, value2, "reqMoney");
            return (Criteria) this;
        }

        public Criteria andReqTimeIsNull() {
            addCriterion("reqRecord.req_time is null");
            return (Criteria) this;
        }

        public Criteria andReqTimeIsNotNull() {
            addCriterion("reqRecord.req_time is not null");
            return (Criteria) this;
        }

        public Criteria andReqTimeEqualTo(Date value) {
            addCriterion("reqRecord.req_time =", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeNotEqualTo(Date value) {
            addCriterion("reqRecord.req_time <>", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeGreaterThan(Date value) {
            addCriterion("reqRecord.req_time >", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("reqRecord.req_time >=", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeLessThan(Date value) {
            addCriterion("reqRecord.req_time <", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeLessThanOrEqualTo(Date value) {
            addCriterion("reqRecord.req_time <=", value, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeIn(List<Date> values) {
            addCriterion("reqRecord.req_time in", values, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeNotIn(List<Date> values) {
            addCriterion("reqRecord.req_time not in", values, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeBetween(Date value1, Date value2) {
            addCriterion("reqRecord.req_time between", value1, value2, "reqTime");
            return (Criteria) this;
        }

        public Criteria andReqTimeNotBetween(Date value1, Date value2) {
            addCriterion("reqRecord.req_time not between", value1, value2, "reqTime");
            return (Criteria) this;
        }

        public Criteria andImportantMattersIsNull() {
            addCriterion("reqRecord.important_matters is null");
            return (Criteria) this;
        }

        public Criteria andImportantMattersIsNotNull() {
            addCriterion("reqRecord.important_matters is not null");
            return (Criteria) this;
        }

        public Criteria andImportantMattersEqualTo(String value) {
            addCriterion("reqRecord.important_matters =", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersNotEqualTo(String value) {
            addCriterion("reqRecord.important_matters <>", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersGreaterThan(String value) {
            addCriterion("reqRecord.important_matters >", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.important_matters >=", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersLessThan(String value) {
            addCriterion("reqRecord.important_matters <", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.important_matters <=", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersLike(String value) {
            addCriterion("reqRecord.important_matters like", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersNotLike(String value) {
            addCriterion("reqRecord.important_matters not like", value, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersIn(List<String> values) {
            addCriterion("reqRecord.important_matters in", values, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersNotIn(List<String> values) {
            addCriterion("reqRecord.important_matters not in", values, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersBetween(String value1, String value2) {
            addCriterion("reqRecord.important_matters between", value1, value2, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andImportantMattersNotBetween(String value1, String value2) {
            addCriterion("reqRecord.important_matters not between", value1, value2, "importantMatters");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("reqRecord.remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("reqRecord.remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("reqRecord.remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("reqRecord.remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("reqRecord.remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("reqRecord.remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("reqRecord.remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("reqRecord.remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("reqRecord.remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("reqRecord.remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("reqRecord.remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("reqRecord.remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andDelIsNull() {
            addCriterion("reqRecord.del is null");
            return (Criteria) this;
        }

        public Criteria andDelIsNotNull() {
            addCriterion("reqRecord.del is not null");
            return (Criteria) this;
        }

        public Criteria andDelEqualTo(Integer value) {
            addCriterion("reqRecord.del =", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelNotEqualTo(Integer value) {
            addCriterion("reqRecord.del <>", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelGreaterThan(Integer value) {
            addCriterion("reqRecord.del >", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.del >=", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelLessThan(Integer value) {
            addCriterion("reqRecord.del <", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelLessThanOrEqualTo(Integer value) {
            addCriterion("reqRecord.del <=", value, "del");
            return (Criteria) this;
        }

        public Criteria andDelIn(List<Integer> values) {
            addCriterion("reqRecord.del in", values, "del");
            return (Criteria) this;
        }

        public Criteria andDelNotIn(List<Integer> values) {
            addCriterion("reqRecord.del not in", values, "del");
            return (Criteria) this;
        }

        public Criteria andDelBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.del between", value1, value2, "del");
            return (Criteria) this;
        }

        public Criteria andDelNotBetween(Integer value1, Integer value2) {
            addCriterion("reqRecord.del not between", value1, value2, "del");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("reqRecord.create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("reqRecord.create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("reqRecord.create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("reqRecord.create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("reqRecord.create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("reqRecord.create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("reqRecord.create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("reqRecord.create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("reqRecord.create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("reqRecord.create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("reqRecord.create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("reqRecord.create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("reqRecord.create_user is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("reqRecord.create_user is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("reqRecord.create_user =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("reqRecord.create_user <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("reqRecord.create_user >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.create_user >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("reqRecord.create_user <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.create_user <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("reqRecord.create_user like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("reqRecord.create_user not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("reqRecord.create_user in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("reqRecord.create_user not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("reqRecord.create_user between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("reqRecord.create_user not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("reqRecord.update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("reqRecord.update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("reqRecord.update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("reqRecord.update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("reqRecord.update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("reqRecord.update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("reqRecord.update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("reqRecord.update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("reqRecord.update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("reqRecord.update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("reqRecord.update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("reqRecord.update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("reqRecord.update_user is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("reqRecord.update_user is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("reqRecord.update_user =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("reqRecord.update_user <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("reqRecord.update_user >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("reqRecord.update_user >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("reqRecord.update_user <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("reqRecord.update_user <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("reqRecord.update_user like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("reqRecord.update_user not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("reqRecord.update_user in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("reqRecord.update_user not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("reqRecord.update_user between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("reqRecord.update_user not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andPersonNameLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.person_name) like", value.toUpperCase(), "personName");
            return (Criteria) this;
        }

        public Criteria andReqContentLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.req_content) like", value.toUpperCase(), "reqContent");
            return (Criteria) this;
        }

        public Criteria andImportantMattersLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.important_matters) like", value.toUpperCase(), "importantMatters");
            return (Criteria) this;
        }

        public Criteria andRemarkLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.remark) like", value.toUpperCase(), "remark");
            return (Criteria) this;
        }

        public Criteria andCreateUserLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.create_user) like", value.toUpperCase(), "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLikeInsensitive(String value) {
            addCriterion("upper(reqRecord.update_user) like", value.toUpperCase(), "updateUser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table req_record
     *
     * @mbggenerated do_not_delete_during_merge Mon Sep 03 15:18:29 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table req_record
     *
     * @mbggenerated Mon Sep 03 15:18:29 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}